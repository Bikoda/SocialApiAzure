// <auto-generated />
using System;
using System.Numerics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialApi.Data;

#nullable disable

namespace SocialApi.Migrations
{
    [DbContext(typeof(WebSocialDbContext))]
    partial class WebSocialDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SocialApi.Models.Domain.Nfts", b =>
                {
                    b.Property<BigInteger>("NftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("long");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<BigInteger>("NftId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsNsfw")
                        .HasColumnType("bit");

                    b.Property<BigInteger>("Likes")
                        .HasColumnType("long");

                    b.Property<string>("NftAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<BigInteger>("Views")
                        .HasColumnType("long");

                    b.HasKey("NftId");

                    b.ToTable("Nfts");
                });

            modelBuilder.Entity("SocialApi.Models.Domain.Users", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("long");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<BigInteger>("UserId"));

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("LogUser");
                });

            modelBuilder.Entity("SocialApi.Models.Domain.UsersNft", b =>
                {
                    b.Property<BigInteger>("UserNftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("long");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<BigInteger>("UserNftId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<BigInteger>("NftId")
                        .HasColumnType("long");

                    b.Property<BigInteger>("UserId")
                        .HasColumnType("long");

                    b.HasKey("UserNftId");

                    b.HasIndex("NftId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNfts");
                });

            modelBuilder.Entity("SocialApi.Models.Domain.UsersNft", b =>
                {
                    b.HasOne("SocialApi.Models.Domain.Nfts", "Nft")
                        .WithMany()
                        .HasForeignKey("NftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialApi.Models.Domain.Users", "User")
                        .WithMany("UserNfts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nfts");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SocialApi.Models.Domain.Users", b =>
                {
                    b.Navigation("UserNfts");
                });
#pragma warning restore 612, 618
        }
    }
}
